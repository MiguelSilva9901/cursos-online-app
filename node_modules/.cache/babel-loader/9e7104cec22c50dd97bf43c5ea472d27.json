{"ast":null,"code":"import axios from 'axios'; //Con esta funci贸n armamos un Request generico\n\naxios.defaults.baseURL = 'http://localhost:5000/api';\nconst requestGenerico = {\n  get: url => axios.get(url),\n  post: (url, body) => axios.post(url, body),\n  put: (url, body) => axios.put(url, body),\n  delete: url => axios.delete(url)\n}; // agregamos el token de seguridad en la cabecera de una petici贸n request, el token almacenado en localstorage del navegador\n\naxios.interceptors.request.use(config => {\n  const token_key = window.localStorage.getItem('token_seguridad');\n\n  if (token_key) {\n    config.headers.Authorization = 'Bearer ' + token_key;\n    return config;\n  }\n}, error => {\n  return Promise.reject(error);\n});\nexport default requestGenerico;","map":{"version":3,"sources":["C:/Proyectos/ProyectoCore/cursos-online-app/src/servicios/HttpCliente.js"],"names":["axios","defaults","baseURL","requestGenerico","get","url","post","body","put","delete","interceptors","request","use","config","token_key","window","localStorage","getItem","headers","Authorization","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,GAAG,EAAIC,GAAD,IAASL,KAAK,CAACI,GAAN,CAAUC,GAAV,CADK;AAEpBC,EAAAA,IAAI,EAAG,CAACD,GAAD,EAAME,IAAN,KAAeP,KAAK,CAACM,IAAN,CAAWD,GAAX,EAAgBE,IAAhB,CAFF;AAGpBC,EAAAA,GAAG,EAAG,CAACH,GAAD,EAAME,IAAN,KAAeP,KAAK,CAACQ,GAAN,CAAUH,GAAV,EAAeE,IAAf,CAHD;AAIpBE,EAAAA,MAAM,EAAIJ,GAAD,IAASL,KAAK,CAACS,MAAN,CAAaJ,GAAb;AAJE,CAAxB,C,CASA;;AACAL,KAAK,CAACU,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,MAAD,IAAY;AACvC,QAAMC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,CAAlB;;AACA,MAAGH,SAAH,EAAa;AACTD,IAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+B,YAAYL,SAA3C;AACA,WAAOD,MAAP;AACH;AACJ,CAND,EAMGO,KAAK,IAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARD;AAUA,eAAejB,eAAf","sourcesContent":["import axios from 'axios';\r\n\r\n//Con esta funci贸n armamos un Request generico\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst requestGenerico = {\r\n    get : (url) => axios.get(url),\r\n    post : (url, body) => axios.post(url, body),\r\n    put : (url, body) => axios.put(url, body),\r\n    delete : (url) => axios.delete(url)\r\n\r\n};\r\n\r\n\r\n// agregamos el token de seguridad en la cabecera de una petici贸n request, el token almacenado en localstorage del navegador\r\naxios.interceptors.request.use((config) => {\r\n    const token_key = window.localStorage.getItem('token_seguridad');\r\n    if(token_key){\r\n        config.headers.Authorization = 'Bearer ' + token_key;\r\n        return config\r\n    }\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default requestGenerico;"]},"metadata":{},"sourceType":"module"}